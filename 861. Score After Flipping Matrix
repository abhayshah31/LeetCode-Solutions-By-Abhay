class Solution {
    public int matrixScore(int[][] grid) {
        int row = grid.length;
        int col = grid[0].length;
        for (int i = 0; i < row; i++) {
            if (grid[i][0] == 0) {
                fliprow(grid, i, col);
            }
        }
        for (int j = 0; j < col; j++) {
            int zero = 0;
            for (int i = 0; i < row; i++) {
                if (grid[i][j] == 0) {
                    zero++;
                }
            }
            if (zero > row / 2) {
                flipcol(grid, row, j);
            }
        }
        int num = 0;
        for (int i = 0; i < row; i++) {
            for (int j = 0; j < col; j++) {
                num += grid[i][j] * (Math.pow(2, col - 1 - j));
            }
        }
        return num;
    }

    private void fliprow(int grid[][], int row, int col) {
        for (int j = 0; j < col; j++) {
            if (grid[row][j] == 0) {
                grid[row][j] = 1;
            } else {
                grid[row][j] = 0;
            }
        }
    }

    private void flipcol(int grid[][], int row, int col) {
        for (int i = 0; i < row; i++) {
            if (grid[i][col] == 0) {
                grid[i][col] = 1;
            } else {
                grid[i][col] = 0;
            }
        }
    }
}
