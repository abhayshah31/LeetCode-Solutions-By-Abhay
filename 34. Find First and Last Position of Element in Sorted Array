class Solution {
    public int[] searchRange(int[] nums, int target) {
        int arr[] = { -1, -1 };
        arr[0] = firstindex(nums, target);
        arr[1] = secondindex(nums, target);
        return arr;
    }

    private int firstindex(int nums[], int target) {
        int low = 0;
        int high = nums.length - 1;
        int first = -1;
        while (low <= high) {
            int mid = (low + high) / 2;
            if (nums[mid] == target) {
                first = mid;
                high = mid - 1;

            } else if (nums[mid] < target) {
                low = mid + 1;
            } else {
                high = mid - 1;
            }
        }
        return first;
    }

    private int secondindex(int nums[], int target) {
        int low = 0;
        int high = nums.length - 1;
        int second = -1;
        while (low <= high) {
            int mid = (low + high) / 2;
            if (nums[mid] == target) {
                second = mid;
                low = mid + 1;
            } else if (nums[mid] < target) {
                low = mid + 1;
            } else {
                high = mid - 1;
            }
        }
        return second;
    }

}
